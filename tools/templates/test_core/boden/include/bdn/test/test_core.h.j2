#ifndef BDN_TEST_Test{{name}}Core_H_
#define BDN_TEST_Test{{name}}Core_H_

#include <bdn/test/TestViewCore.h>
#include <bdn/{{name}}.h>

namespace bdn
{
namespace test
{


/** Helper for tests that verify I{{name}}Core implementations.*/
class Test{{name}}Core : public TestViewCore<{{name}}>
{

protected:

    P<View> createView() override
    {
        P<{{name}}> p{{name}} = newObj<{{name}}>();
        //p{{name}}->label() = "hello";

        return p{{name}};
    }

    void setView(View* pView) override
    {
        TestViewCore::setView(pView);

        _p{{name}} = cast<{{name}}>( pView );
    }

    void runInitTests() override
    {
        TestViewCore::runInitTests();

        /*SECTION("label")
        {
            _p{{name}}->label() = "helloworld";
            initCore();
            verifyCoreLabel();
        }*/
    }

    void runPostInitTests() override
    {
        P<Test{{name}}Core> pThis(this);
    
        TestViewCore::runPostInitTests();

        /*SECTION("label")
        {
            SECTION("value")
            {
                _p{{name}}->label() = "helloworld";
                
                CONTINUE_SECTION_WHEN_IDLE(pThis)
                {
                    pThis->verifyCoreLabel();
                };
            }
        }*/
    }

    /** Verifies that the {{name}} core's label has the expected value
        (the label set in the outer {{name}} object's {{name}}::label() property.*/
    virtual void verifyCoreLabel()=0;


    P<{{name}}> _p{{name}};
};


}
}

#endif

